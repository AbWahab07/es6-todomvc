{"version":3,"sources":["webpack:///bundle.app.e7dd29070eaa6d1e9d47.js","webpack:///./helpers.js","webpack:///./todo.js","webpack:///./graph/index.js","webpack:///../~/offline-plugin/runtime.js","webpack:///./app.css?9ae3","webpack:///./controller.js","webpack:///./model.js","webpack:///./store.js","webpack:///./template.js","webpack:///./view.js","webpack:///./app.css","webpack:///./app.js"],"names":["webpackJsonp","module","exports","__webpack_require__","qs","selector","scope","document","querySelector","qsa","querySelectorAll","$on","target","type","callback","useCapture","addEventListener","$delegate","handler","dispatchEvent","event","targetElement","potentialElements","hasMatch","Array","prototype","indexOf","call","$parent","element","tagName","parentNode","toLowerCase","remove","array","thing","index","splice","d","NodeList","forEach","Todo","name","this","storage","__WEBPACK_IMPORTED_MODULE_3__store__","model","__WEBPACK_IMPORTED_MODULE_2__model__","template","__WEBPACK_IMPORTED_MODULE_4__template__","view","__WEBPACK_IMPORTED_MODULE_0__view__","controller","__WEBPACK_IMPORTED_MODULE_1__controller__","updateTodo","todo","setView","location","hash","subscribers","s","getTodo","subscribe","cb","push","i","__WEBPACK_IMPORTED_MODULE_5__helpers__","toggleGraph","graphArea","unsubscribe","store","createElement","body","appendChild","_getTodo","__WEBPACK_IMPORTED_MODULE_0__todo__","loadAndRenderGraph","updateTodoSubscription","updateStoreSubscription","_getTodo2","node","e","then","bind","_ref","renderGraph","hasSW","navigator","window","fetch","documentElement","style","protocol","hostname","install","options","serviceWorker","register","applicationCache","directory","doLoad","page","iframe","src","display","appCacheIframe","readyState","setTimeout","applyUpdate","errback","content","locals","Controller","that","title","addItem","item","editItem","id","editItemSave","editItemCancel","removeItem","toggleComplete","completed","removeCompletedItems","status","toggleAll","locationHash","route","split","_updateFilterState","showAll","read","data","render","showActive","showCompleted","trim","create","_filter","update","silent","_updateCount","getCount","todos","active","visible","checked","total","force","activeRoute","_activeRoute","charAt","toUpperCase","substr","_lastActiveRoute","currentPage","Model","_typeof","Symbol","iterator","obj","constructor","newItem","save","query","queryType","findAll","parseInt","find","removeAll","drop","Store","_dbName","localStorage","JSON","stringify","parse","__WEBPACK_IMPORTED_MODULE_0__helpers__","subscriber","_this","_notify","filter","q","updateData","length","key","Date","getTime","Template","defaultTemplate","htmlEscapes","&","<",">","\"","'","`","escapeHtmlChar","chr","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","escape","string","test","replace","show","l","itemCounter","activeTodos","plural","clearCompletedButton","completedTodos","_classCallCheck","instance","Constructor","TypeError","_setFilter","className","_elementComplete","listItem","_editItem","input","focus","value","_itemId","li","dataset","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","View","ENTER_KEY","ESCAPE_KEY","$todoList","$todoItemCounter","$clearCompleted","$main","$footer","$toggleAll","$newTodo","elem","removeChild","completedCount","innerHTML","label","textContent","viewCmd","parameter","viewCommands","showEntries","_removeItem","updateElementCount","_clearCompletedButton","contentBlockVisibility","setFilter","clearNewTodo","elementComplete","editItemDone","_editItemDone","iscanceled","keyCode","blur","_bindItemEditDone","_bindItemEditCancel","onLoad","__WEBPACK_IMPORTED_MODULE_5__todo__","toggleGraphButton","__WEBPACK_IMPORTED_MODULE_4__helpers__","__WEBPACK_IMPORTED_MODULE_6__graph__","classList","add","__WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css__","__WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css___default","__esModule","__WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css__","__WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css___default","__WEBPACK_IMPORTED_MODULE_2__app_css__","__WEBPACK_IMPORTED_MODULE_2__app_css___default","__WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__","__WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime___default"],"mappings":"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","file":"bundle.app.e7dd29070eaa6d1e9d47.js","sourcesContent":["webpackJsonp([1,3],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/* harmony export */ __webpack_require__.d(exports, \"a\", function() { return qs; });\n/* harmony export */ __webpack_require__.d(exports, \"b\", function() { return qsa; });\n/* harmony export */ __webpack_require__.d(exports, \"d\", function() { return $on; });\n/* harmony export */ __webpack_require__.d(exports, \"c\", function() { return $delegate; });\n/* harmony export */ __webpack_require__.d(exports, \"e\", function() { return $parent; });/* unused harmony export log */\n/* harmony export */ __webpack_require__.d(exports, \"f\", function() { return remove; });\n\n// Get element(s) by CSS selector:\nfunction qs(selector, scope) {\n  return (scope || document).querySelector(selector);\n}\nfunction qsa(selector, scope) {\n  return (scope || document).querySelectorAll(selector);\n}\n\nfunction log() {\n  if (window.console && window.console.log) {\n    var _window$console;\n\n    (_window$console = window.console).log.apply(_window$console, arguments);\n  }\n}\n\n// addEventListener wrapper:\nfunction $on(target, type, callback, useCapture) {\n  target.addEventListener(type, callback, !!useCapture);\n}\n\n// Attach a handler to event for all elements that match the selector,\n// now or in the future, based on a root element\nfunction $delegate(target, selector, type, handler) {\n  // https://developer.mozilla.org/en-US/docs/Web/Events/blur\n  var useCapture = type === 'blur' || type === 'focus';\n  $on(target, type, dispatchEvent, useCapture);\n\n  function dispatchEvent(event) {\n    var targetElement = event.target;\n    var potentialElements = qsa(selector, target);\n    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0;\n\n    if (hasMatch) {\n      handler.call(targetElement, event);\n    }\n  }\n}\n\n// Find the element's parent with the given tag name:\n// $parent(qs('a'), 'div');\nfunction $parent(element, tagName) {\n  if (!element.parentNode) {\n    return undefined;\n  }\n  if (element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()) {\n    return element.parentNode;\n  }\n  return $parent(element.parentNode, tagName);\n}\n\nfunction remove(array, thing) {\n  var index = array.indexOf(thing);\n  if (index === -1) {\n    return array;\n  }\n  array.splice(index, 1);\n}\n\n// Allow for looping on nodes by chaining:\n// qsa('.foo').forEach(function () {})\nNodeList.prototype.forEach = Array.prototype.forEach;\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__view__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__controller__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__store__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__template__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__helpers__ = __webpack_require__(0);\n\n/* harmony export */ __webpack_require__.d(exports, \"c\", function() { return updateTodo; });\n/* harmony export */ __webpack_require__.d(exports, \"a\", function() { return getTodo; });\n/* harmony export */ __webpack_require__.d(exports, \"b\", function() { return subscribe; });\n\n\n\n\n\n\n\n\nvar todo = void 0;\nvar subscribers = [];\n\n/**\n * Sets up a brand new Todo list.\n *\n * @param {string} name The name of your new to do list.\n */\nfunction Todo(name) {\n  this.storage = new __WEBPACK_IMPORTED_MODULE_3__store__[\"a\" /* default */](name);\n  this.model = new __WEBPACK_IMPORTED_MODULE_2__model__[\"a\" /* default */](this.storage);\n  this.template = new __WEBPACK_IMPORTED_MODULE_4__template__[\"a\" /* default */]();\n  this.view = new __WEBPACK_IMPORTED_MODULE_0__view__[\"a\" /* default */](this.template);\n  this.controller = new __WEBPACK_IMPORTED_MODULE_1__controller__[\"a\" /* default */](this.model, this.view);\n}\n\nfunction updateTodo() {\n  todo = new Todo('todos-vanillajs');\n  todo.controller.setView(document.location.hash);\n  subscribers.forEach(function (s) {\n    return s();\n  });\n}\n\nfunction getTodo() {\n  return todo;\n}\n\nfunction subscribe(cb) {\n  subscribers.push(cb);\n  return function unsubscribe() {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__helpers__[\"f\" /* remove */])(subscribers, cb);\n  };\n}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__todo__ = __webpack_require__(5);\n\n\nvar graphArea = void 0;\nvar unsubscribe = {\n  store: null,\n  todo: null\n};\n\n/* harmony default export */ exports[\"a\"] = toggleGraph;\n\nfunction toggleGraph() {\n  if (graphArea) {\n    graphArea.remove();\n    graphArea = null;\n    unsubscribe.store();\n    unsubscribe.todo();\n    return false;\n  } else {\n    graphArea = document.createElement('div');\n    document.body.querySelector('.graph-area-container').appendChild(graphArea);\n\n    var _getTodo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__todo__[\"a\" /* getTodo */])();\n\n    var storage = _getTodo.storage;\n\n    loadAndRenderGraph(graphArea, storage);\n    updateTodoSubscription();\n    updateStoreSubscription(storage);\n    return true;\n  }\n}\n\nfunction updateTodoSubscription() {\n  if (unsubscribe.todo) {\n    unsubscribe.todo();\n  }\n  unsubscribe.todo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__todo__[\"b\" /* subscribe */])(function onTodoUpdate() {\n    var _getTodo2 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__todo__[\"a\" /* getTodo */])();\n\n    var storage = _getTodo2.storage;\n\n    updateStoreSubscription(storage);\n    loadAndRenderGraph(graphArea, storage);\n  });\n}\n\nfunction updateStoreSubscription(store) {\n  if (unsubscribe.store) {\n    unsubscribe.store();\n  }\n  unsubscribe.store = store.subscribe(function onStoreUpdate() {\n    loadAndRenderGraph(graphArea, store);\n  });\n}\n\nfunction loadAndRenderGraph(node, store) {\n  __webpack_require__.e/* System.import */(0).then(__webpack_require__.bind(null, 19)).then(function (_ref) {\n    var renderGraph = _ref.default;\n\n    renderGraph(node, store);\n  });\n}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\nvar appCacheIframe;\n\nfunction hasSW() {\n  return 'serviceWorker' in navigator &&\n    // This is how I block Chrome 40 and detect Chrome 41, because first has\n    // bugs with history.pustState and/or hashchange\n    (window.fetch || 'imageRendering' in document.documentElement.style) &&\n    (window.location.protocol === 'https:' || window.location.hostname === 'localhost')\n}\n\nfunction install(options) {\n  options || (options = {});\n\n  \n    if (hasSW()) {\n      var registration = navigator.serviceWorker\n        .register(\n          \"sw.js\"\n          \n        );\n\n      \n\n      return;\n    }\n  \n\n  \n    if (window.applicationCache) {\n      var directory = \"appcache/\";\n      var name = \"manifest\";\n\n      var doLoad = function() {\n        var page = directory + name + '.html';\n        var iframe = document.createElement('iframe');\n\n        \n\n        iframe.src = page;\n        iframe.style.display = 'none';\n\n        appCacheIframe = iframe;\n        document.body.appendChild(iframe);\n      };\n\n      if (document.readyState === 'complete') {\n        setTimeout(doLoad);\n      } else {\n        window.addEventListener('load', doLoad);\n      }\n\n      return;\n    }\n  \n}\n\nfunction applyUpdate(callback, errback) {\n  \n\n  \n}\n\nexports.install = install;\nexports.applyUpdate = applyUpdate;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(16);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(4)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ exports[\"a\"] = Controller;\n\n/**\n* Takes a model and view and acts as the controller between them\n*\n* @constructor\n* @param {object} model The model instance\n* @param {object} view The view instance\n*/\nfunction Controller(model, view) {\n  var that = this;\n  that.model = model;\n  that.view = view;\n\n  that.view.bind('newTodo', function (title) {\n    that.addItem(title);\n  });\n\n  that.view.bind('itemEdit', function (item) {\n    that.editItem(item.id);\n  });\n\n  that.view.bind('itemEditDone', function (item) {\n    that.editItemSave(item.id, item.title);\n  });\n\n  that.view.bind('itemEditCancel', function (item) {\n    that.editItemCancel(item.id);\n  });\n\n  that.view.bind('itemRemove', function (item) {\n    that.removeItem(item.id);\n  });\n\n  that.view.bind('itemToggle', function (item) {\n    that.toggleComplete(item.id, item.completed);\n  });\n\n  that.view.bind('removeCompleted', function () {\n    that.removeCompletedItems();\n  });\n\n  that.view.bind('toggleAll', function (status) {\n    that.toggleAll(status.completed);\n  });\n}\n\n/**\n* Loads and initialises the view\n*\n* @param {string} '' | 'active' | 'completed'\n*/\nController.prototype.setView = function (locationHash) {\n  var route = locationHash.split('/')[1];\n  var page = route || '';\n  this._updateFilterState(page);\n};\n\n/**\n* An event to fire on load. Will get all items and display them in the\n* todo-list\n*/\nController.prototype.showAll = function () {\n  var that = this;\n  that.model.read(function (data) {\n    that.view.render('showEntries', data);\n  });\n};\n\n/**\n* Renders all active tasks\n*/\nController.prototype.showActive = function () {\n  var that = this;\n  that.model.read({ completed: false }, function (data) {\n    that.view.render('showEntries', data);\n  });\n};\n\n/**\n* Renders all completed tasks\n*/\nController.prototype.showCompleted = function () {\n  var that = this;\n  that.model.read({ completed: true }, function (data) {\n    that.view.render('showEntries', data);\n  });\n};\n\n/**\n* An event to fire whenever you want to add an item. Simply pass in the event\n* object and it'll handle the DOM insertion and saving of the new item.\n*/\nController.prototype.addItem = function (title) {\n  var that = this;\n\n  if (title.trim() === '') {\n    return;\n  }\n\n  that.model.create(title, function () {\n    that.view.render('clearNewTodo');\n    that._filter(true);\n  });\n};\n\n/*\n* Triggers the item editing mode.\n*/\nController.prototype.editItem = function (id) {\n  var that = this;\n  that.model.read(id, function (data) {\n    that.view.render('editItem', { id: id, title: data[0].title });\n  });\n};\n\n/*\n* Finishes the item editing mode successfully.\n*/\nController.prototype.editItemSave = function (id, title) {\n  var that = this;\n  if (title.trim()) {\n    that.model.update(id, { title: title }, function () {\n      that.view.render('editItemDone', { id: id, title: title });\n    });\n  } else {\n    that.removeItem(id);\n  }\n};\n\n/*\n* Cancels the item editing mode.\n*/\nController.prototype.editItemCancel = function (id) {\n  var that = this;\n  that.model.read(id, function (data) {\n    that.view.render('editItemDone', { id: id, title: data[0].title });\n  });\n};\n\n/**\n* By giving it an ID it'll find the DOM element matching that ID,\n* remove it from the DOM and also remove it from storage.\n*\n* @param {number} id The ID of the item to remove from the DOM and\n* storage\n*/\nController.prototype.removeItem = function (id) {\n  var that = this;\n  that.model.remove(id, function () {\n    that.view.render('removeItem', id);\n  });\n\n  that._filter();\n};\n\n/**\n* Will remove all completed items from the DOM and storage.\n*/\nController.prototype.removeCompletedItems = function () {\n  var that = this;\n  that.model.read({ completed: true }, function (data) {\n    data.forEach(function (item) {\n      that.removeItem(item.id);\n    });\n  });\n\n  that._filter();\n};\n\n/**\n* Give it an ID of a model and a checkbox and it will update the item\n* in storage based on the checkbox's state.\n*\n* @param {number} id The ID of the element to complete or uncomplete\n* @param {object} checkbox The checkbox to check the state of complete\n*                          or not\n* @param {boolean|undefined} silent Prevent re-filtering the todo items\n*/\nController.prototype.toggleComplete = function (id, completed, silent) {\n  var that = this;\n  that.model.update(id, { completed: completed }, function () {\n    that.view.render('elementComplete', {\n      id: id,\n      completed: completed\n    });\n  });\n\n  if (!silent) {\n    that._filter();\n  }\n};\n\n/**\n* Will toggle ALL checkboxes' on/off state and completeness of models.\n* Just pass in the event object.\n*/\nController.prototype.toggleAll = function (completed) {\n  var that = this;\n  that.model.read({ completed: !completed }, function (data) {\n    data.forEach(function (item) {\n      that.toggleComplete(item.id, completed, true);\n    });\n  });\n\n  that._filter();\n};\n\n/**\n* Updates the pieces of the page which change depending on the remaining\n* number of todos.\n*/\nController.prototype._updateCount = function () {\n  var that = this;\n  that.model.getCount(function (todos) {\n    that.view.render('updateElementCount', todos.active);\n    that.view.render('clearCompletedButton', {\n      completed: todos.completed,\n      visible: todos.completed > 0\n    });\n\n    that.view.render('toggleAll', { checked: todos.completed === todos.total });\n    that.view.render('contentBlockVisibility', { visible: todos.total > 0 });\n  });\n};\n\n/**\n* Re-filters the todo items, based on the active route.\n* @param {boolean|undefined} force  forces a re-painting of todo items.\n*/\nController.prototype._filter = function (force) {\n  var activeRoute = this._activeRoute.charAt(0).toUpperCase() + this._activeRoute.substr(1);\n\n  // Update the elements on the page, which change with each completed todo\n  this._updateCount();\n\n  // If the last active route isn't \"All\", or we're switching routes, we\n  // re-create the todo item elements, calling:\n  //   this.show[All|Active|Completed]();\n  if (force || this._lastActiveRoute !== 'All' || this._lastActiveRoute !== activeRoute) {\n    this['show' + activeRoute]();\n  }\n\n  this._lastActiveRoute = activeRoute;\n};\n\n/**\n* Simply updates the filter nav's selected states\n*/\nController.prototype._updateFilterState = function (currentPage) {\n  // Store a reference to the active route, allowing us to re-filter todo\n  // items as they are marked complete or incomplete.\n  currentPage = currentPage.split('?')[0];\n  this._activeRoute = currentPage;\n\n  if (currentPage === '') {\n    this._activeRoute = 'All';\n  }\n\n  this._filter();\n\n  this.view.render('setFilter', currentPage);\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* harmony default export */ exports[\"a\"] = Model;\n\n/**\n* Creates a new Model instance and hooks up the storage.\n*\n* @constructor\n* @param {object} storage A reference to the client side storage class\n*/\nfunction Model(storage) {\n  this.storage = storage;\n}\n\n/**\n* Creates a new todo model\n*\n* @param {string} [title] The title of the task\n* @param {function} [callback] The callback to fire after the model is created\n*/\nModel.prototype.create = function (title, callback) {\n  title = title || '';\n  callback = callback || function () {};\n\n  var newItem = {\n    title: title.trim(),\n    completed: false\n  };\n\n  this.storage.save(newItem, callback);\n};\n\n/**\n * Finds and returns a model in storage. If no query is given it'll simply\n * return everything. If you pass in a string or number it'll look that up as\n * the ID of the model to find. Lastly, you can pass it an object to match against.\n *\n * @param {string|number|object} [query] A query to match models against\n * @param {function} [callback] The callback to fire after the model is found\n *\n * @example\n * model.read(1, func); // Will find the model with an ID of 1\n * model.read('1'); // Same as above\n * //Below will find a model with foo equalling bar and hello equalling world.\n * model.read({ foo: 'bar', hello: 'world' });\n */\nModel.prototype.read = function (query, callback) {\n  var queryType = typeof query === 'undefined' ? 'undefined' : _typeof(query);\n  callback = callback || function () {};\n\n  if (queryType === 'function') {\n    callback = query;\n    return this.storage.findAll(callback);\n  } else if (queryType === 'string' || queryType === 'number') {\n    query = parseInt(query, 10);\n    this.storage.find({ id: query }, callback);\n  } else {\n    this.storage.find(query, callback);\n  }\n  return undefined;\n};\n\n/**\n* Updates a model by giving it an ID, data to update, and a callback to fire when\n* the update is complete.\n*\n* @param {number} id The id of the model to update\n* @param {object} data The properties to update and their new value\n* @param {function} callback The callback to fire when the update is complete.\n*/\nModel.prototype.update = function (id, data, callback) {\n  this.storage.save(data, callback, id);\n};\n\n/**\n* Removes a model from storage\n*\n* @param {number} id The ID of the model to remove\n* @param {function} callback The callback to fire when the removal is complete.\n*/\nModel.prototype.remove = function (id, callback) {\n  this.storage.remove(id, callback);\n};\n\n/**\n* WARNING: Will remove ALL data from storage.\n*\n* @param {function} callback The callback to fire when the storage is wiped.\n*/\nModel.prototype.removeAll = function (callback) {\n  this.storage.drop(callback);\n};\n\n/**\n* Returns a count of all todos\n*/\nModel.prototype.getCount = function (callback) {\n  var todos = {\n    active: 0,\n    completed: 0,\n    total: 0\n  };\n\n  this.storage.findAll(function (data) {\n    data.forEach(function (todo) {\n      if (todo.completed) {\n        todos.completed++;\n      } else {\n        todos.active++;\n      }\n\n      todos.total++;\n    });\n    callback(todos);\n  });\n};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(0);\n\n/* harmony default export */ exports[\"a\"] = Store;\n\n/**\n * Creates a new client side storage object and will create an empty\n * collection if no collection already exists.\n *\n * @param {string} name The name of our DB we want to use\n * @param {function} callback Our fake DB uses callbacks because in\n * real life you probably would be making AJAX calls\n */\nfunction Store(name, callback) {\n  callback = callback || function () {};\n\n  this._dbName = name;\n\n  if (!localStorage[name]) {\n    var data = {\n      todos: []\n    };\n\n    localStorage[name] = JSON.stringify(data);\n  }\n\n  callback.call(this, JSON.parse(localStorage[name]));\n  this.subscribers = [];\n}\n\nStore.prototype.subscribe = function (subscriber) {\n  var _this = this;\n\n  this.subscribers.push(subscriber);\n  return function () {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* remove */])(_this.subscribers, subscriber);\n  };\n};\n\nStore.prototype._notify = function () {\n  this.subscribers.forEach(function (s) {\n    return s();\n  });\n};\n\n/**\n* Finds items based on a query given as a JS object\n*\n* @param {object} query The query to match against (i.e. {foo: 'bar'})\n* @param {function} callback   The callback to fire when the query has\n* completed running\n*\n* @example\n* db.find({foo: 'bar', hello: 'world'}, function (data) {\n*   // data will return any items that have foo: bar and\n*   // hello: world in their properties\n* });\n*/\nStore.prototype.find = function (query, callback) {\n  if (!callback) {\n    return;\n  }\n\n  var todos = JSON.parse(localStorage[this._dbName]).todos;\n\n  callback.call(this, todos.filter(function (todo) {\n    for (var q in query) {\n      if (query[q] !== todo[q]) {\n        return false;\n      }\n    }\n    return true;\n  }));\n};\n\n/**\n* Will retrieve all data from the collection\n*\n* @param {function} callback The callback to fire upon retrieving data\n*/\nStore.prototype.findAll = function (callback) {\n  callback = callback || function () {};\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n};\n\n/**\n* Will save the given data to the DB. If no item exists it will create a new\n* item, otherwise it'll simply update an existing item's properties\n*\n* @param {object} updateData The data to save back into the DB\n* @param {function} callback The callback to fire after saving\n* @param {number} id An optional param to enter an ID of an item to update\n*/\nStore.prototype.save = function (updateData, callback, id) {\n  var data = JSON.parse(localStorage[this._dbName]);\n  var todos = data.todos;\n\n  callback = callback || function () {};\n\n  // If an ID was actually given, find the item and update each property\n  if (id) {\n    for (var i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n        for (var key in updateData) {\n          // eslint-disable-line guard-for-in\n          todos[i][key] = updateData[key];\n        }\n        break;\n      }\n    }\n\n    localStorage[this._dbName] = JSON.stringify(data);\n    callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n  } else {\n    // Generate an ID\n    updateData.id = new Date().getTime();\n\n    todos.push(updateData);\n    localStorage[this._dbName] = JSON.stringify(data);\n    callback.call(this, [updateData]);\n  }\n  this._notify();\n};\n\n/**\n* Will remove an item from the Store based on its ID\n*\n* @param {number} id The ID of the item you want to remove\n* @param {function} callback The callback to fire after saving\n*/\nStore.prototype.remove = function (id, callback) {\n  var data = JSON.parse(localStorage[this._dbName]);\n  var todos = data.todos;\n\n  for (var i = 0; i < todos.length; i++) {\n    if (todos[i].id === id) {\n      todos.splice(i, 1);\n      break;\n    }\n  }\n\n  localStorage[this._dbName] = JSON.stringify(data);\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n  this._notify();\n};\n\n/**\n* Will drop all storage and start fresh\n*\n* @param {function} callback The callback to fire after dropping the data\n*/\nStore.prototype.drop = function (callback) {\n  localStorage[this._dbName] = JSON.stringify({ todos: [] });\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n  this._notify();\n};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ exports[\"a\"] = Template;\n\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;',\n  '`': '&#x60;'\n};\n\nvar escapeHtmlChar = function escapeHtmlChar(chr) {\n  return htmlEscapes[chr];\n};\n\nvar reUnescapedHtml = /[&<>\"'`]/g;\nvar reHasUnescapedHtml = new RegExp(reUnescapedHtml.source);\n\nvar escape = function escape(string) {\n  if (string && reHasUnescapedHtml.test(string)) {\n    return string.replace(reUnescapedHtml, escapeHtmlChar);\n  } else {\n    return string;\n  }\n};\n\n/**\n* Sets up defaults for all the Template methods such as a default template\n*\n* @constructor\n*/\nfunction Template() {\n  this.defaultTemplate = '\\n    <li data-id=\"{{id}}\" class=\"{{completed}}\">\\n      <div class=\"view\">\\n        <input class=\"toggle\" type=\"checkbox\" {{checked}} />\\n        <label>{{title}}</label>\\n        <button class=\"destroy\"></button>\\n      </div>\\n    </li>\\n  ';\n}\n\n/**\n * Creates an <li> HTML string and returns it for placement in your app.\n *\n * NOTE: In real life you should be using a templating engine such as Mustache\n * or Handlebars, however, this is a vanilla JS example.\n *\n * @param {object} data The object containing keys you want to find in the\n *                      template to replace.\n * @returns {string} HTML String of an <li> element\n *\n * @example\n * view.show({\n *  id: 1,\n *  title: \"Hello World\",\n *  completed: 0,\n * });\n */\nTemplate.prototype.show = function (data) {\n  var i, l;\n  var view = '';\n\n  for (i = 0, l = data.length; i < l; i++) {\n    var template = this.defaultTemplate;\n    var completed = '';\n    var checked = '';\n\n    if (data[i].completed) {\n      completed = 'completed';\n      checked = 'checked';\n    }\n\n    template = template.replace('{{id}}', data[i].id);\n    template = template.replace('{{title}}', escape(data[i].title));\n    template = template.replace('{{completed}}', completed);\n    template = template.replace('{{checked}}', checked);\n\n    view = view + template;\n  }\n\n  return view;\n};\n\n/**\n * Displays a counter of how many to dos are left to complete\n *\n * @param {number} activeTodos The number of active todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.itemCounter = function (activeTodos) {\n  var plural = activeTodos === 1 ? '' : 's';\n\n  return '<strong>' + activeTodos + '</strong> item' + plural + ' left';\n};\n\n/**\n * Updates the text within the \"Clear completed\" button\n *\n * @param  {[type]} completedTodos The number of completed todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.clearCompletedButton = function (completedTodos) {\n  if (completedTodos > 0) {\n    return 'Clear completed';\n  } else {\n    return '';\n  }\n};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint no-invalid-this: 0, complexity:[2, 9] */\n\n\n/**\n * View that abstracts away the browser's DOM completely.\n * It has two simple entry points:\n *\n *   - bind(eventName, handler)\n *     Takes a todo application event and registers the handler\n *   - render(command, parameterObject)\n *     Renders the given command with the options\n */\n\nvar View = function () {\n  function View(template) {\n    _classCallCheck(this, View);\n\n    this.template = template;\n\n    this.ENTER_KEY = 13;\n    this.ESCAPE_KEY = 27;\n\n    this.$todoList = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.todo-list');\n    this.$todoItemCounter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.todo-count');\n    this.$clearCompleted = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.clear-completed');\n    this.$main = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.main');\n    this.$footer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.footer');\n    this.$toggleAll = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.toggle-all');\n    this.$newTodo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.new-todo');\n  }\n\n  _createClass(View, [{\n    key: '_removeItem',\n    value: function _removeItem(id) {\n      var elem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('[data-id=\"' + id + '\"]');\n\n      if (elem) {\n        this.$todoList.removeChild(elem);\n      }\n    }\n  }, {\n    key: '_clearCompletedButton',\n    value: function _clearCompletedButton(completedCount, visible) {\n      this.$clearCompleted.innerHTML = this.template.clearCompletedButton(completedCount);\n      this.$clearCompleted.style.display = visible ? 'block' : 'none';\n    }\n  }, {\n    key: '_editItemDone',\n    value: function _editItemDone(id, title) {\n      var listItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('[data-id=\"' + id + '\"]');\n\n      if (!listItem) {\n        return;\n      }\n\n      var input = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('input.edit', listItem);\n      listItem.removeChild(input);\n\n      listItem.className = listItem.className.replace('editing', '');\n\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qsa */])('label', listItem).forEach(function (label) {\n        label.textContent = title;\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render(viewCmd, parameter) {\n      var that = this;\n      var viewCommands = {\n        showEntries: function showEntries() {\n          that.$todoList.innerHTML = that.template.show(parameter);\n        },\n        removeItem: function removeItem() {\n          that._removeItem(parameter);\n        },\n        updateElementCount: function updateElementCount() {\n          that.$todoItemCounter.innerHTML = that.template.itemCounter(parameter);\n        },\n        clearCompletedButton: function clearCompletedButton() {\n          that._clearCompletedButton(parameter.completed, parameter.visible);\n        },\n        contentBlockVisibility: function contentBlockVisibility() {\n          that.$main.style.display = that.$footer.style.display = parameter.visible ? 'block' : 'none';\n        },\n        toggleAll: function toggleAll() {\n          that.$toggleAll.checked = parameter.checked;\n        },\n        setFilter: function setFilter() {\n          _setFilter(parameter);\n        },\n        clearNewTodo: function clearNewTodo() {\n          that.$newTodo.value = '';\n        },\n        elementComplete: function elementComplete() {\n          _elementComplete(parameter.id, parameter.completed);\n        },\n        editItem: function editItem() {\n          _editItem(parameter.id, parameter.title);\n        },\n        editItemDone: function editItemDone() {\n          that._editItemDone(parameter.id, parameter.title);\n        }\n      };\n\n      viewCommands[viewCmd]();\n    }\n  }, {\n    key: '_bindItemEditDone',\n    value: function _bindItemEditDone(handler) {\n      var that = this;\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* $delegate */])(that.$todoList, 'li .edit', 'blur', function () {\n        if (!this.dataset.iscanceled) {\n          handler({\n            id: _itemId(this),\n            title: this.value\n          });\n        }\n      });\n\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* $delegate */])(that.$todoList, 'li .edit', 'keypress', function (event) {\n        if (event.keyCode === that.ENTER_KEY) {\n          // Remove the cursor from the input when you hit enter just like if it\n          // were a real form\n          this.blur();\n        }\n      });\n    }\n  }, {\n    key: '_bindItemEditCancel',\n    value: function _bindItemEditCancel(handler) {\n      var that = this;\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* $delegate */])(that.$todoList, 'li .edit', 'keyup', function (event) {\n        if (event.keyCode === that.ESCAPE_KEY) {\n          this.dataset.iscanceled = true;\n          this.blur();\n\n          handler({ id: _itemId(this) });\n        }\n      });\n    }\n  }, {\n    key: 'bind',\n    value: function bind(event, handler) {\n      var that = this;\n      if (event === 'newTodo') {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* $on */])(that.$newTodo, 'change', function () {\n          handler(that.$newTodo.value);\n        });\n      } else if (event === 'removeCompleted') {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* $on */])(that.$clearCompleted, 'click', function () {\n          handler();\n        });\n      } else if (event === 'toggleAll') {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* $on */])(that.$toggleAll, 'click', function () {\n          handler({ completed: this.checked });\n        });\n      } else if (event === 'itemEdit') {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* $delegate */])(that.$todoList, 'li label', 'dblclick', function () {\n          handler({ id: _itemId(this) });\n        });\n      } else if (event === 'itemRemove') {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* $delegate */])(that.$todoList, '.destroy', 'click', function () {\n          handler({ id: _itemId(this) });\n        });\n      } else if (event === 'itemToggle') {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* $delegate */])(that.$todoList, '.toggle', 'click', function () {\n          handler({\n            id: _itemId(this),\n            completed: this.checked\n          });\n        });\n      } else if (event === 'itemEditDone') {\n        that._bindItemEditDone(handler);\n      } else if (event === 'itemEditCancel') {\n        that._bindItemEditCancel(handler);\n      }\n    }\n  }]);\n\n  return View;\n}();\n\n/* harmony default export */ exports[\"a\"] = View;\n\n\nfunction _setFilter(currentPage) {\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.filters .selected').className = '';\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('.filters [href=\"#/' + currentPage + '\"]').className = 'selected';\n}\n\nfunction _elementComplete(id, completed) {\n  var listItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('[data-id=\"' + id + '\"]');\n\n  if (!listItem) {\n    return;\n  }\n\n  listItem.className = completed ? 'completed' : '';\n\n  // In case it was toggled from an event and not by clicking the checkbox\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('input', listItem).checked = completed;\n}\n\nfunction _editItem(id, title) {\n  var listItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* qs */])('[data-id=\"' + id + '\"]');\n\n  if (!listItem) {\n    return;\n  }\n\n  listItem.className = listItem.className + ' editing';\n\n  var input = document.createElement('input');\n  input.className = 'edit';\n\n  listItem.appendChild(input);\n  input.focus();\n  input.value = title;\n}\n\nfunction _itemId(element) {\n  var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $parent */])(element, 'li');\n  return parseInt(li.dataset.id, 10);\n}\n\n/***/ },\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(3)();\n// imports\n\n\n// module\nexports.push([module.i, \".toggle-graph{float:left;margin-left:16px;cursor:pointer;position:relative;z-index:1}.toggle-graph svg{height:20px;width:20px}.toggle-graph svg path{fill:#777}.toggle-graph.active svg path,.toggle-graph:focus svg path,.toggle-graph:hover svg path{fill:#000}\", \"\"]);\n\n// exports\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css___default = __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css__ && __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css___default, 'a', __WEBPACK_IMPORTED_MODULE_0_todomvc_common_base_css___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css___default = __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css__ && __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css___default, 'a', __WEBPACK_IMPORTED_MODULE_1_todomvc_app_css_index_css___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_css__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_css___default = __WEBPACK_IMPORTED_MODULE_2__app_css__ && __WEBPACK_IMPORTED_MODULE_2__app_css__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_2__app_css__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_2__app_css__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_2__app_css___default, 'a', __WEBPACK_IMPORTED_MODULE_2__app_css___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime___default = __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__ && __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime___default, 'a', __WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__helpers__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__todo__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__graph__ = __webpack_require__(6);\n\n\n\n\n\n\n\n\n\nif (true) {\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_offline_plugin_runtime__[\"install\"])();\n}\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__helpers__[\"d\" /* $on */])(window, 'load', onLoad);\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__helpers__[\"d\" /* $on */])(window, 'hashchange', __WEBPACK_IMPORTED_MODULE_5__todo__[\"c\" /* updateTodo */]);\n\nfunction onLoad() {\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__todo__[\"c\" /* updateTodo */])();\n  var toggleGraphButton = document.querySelector('.toggle-graph');\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__helpers__[\"d\" /* $on */])(toggleGraphButton, 'click', function () {\n    var active = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__graph__[\"a\" /* default */])();\n    if (active) {\n      toggleGraphButton.classList.add('active');\n    } else {\n      toggleGraphButton.classList.remove('active');\n    }\n  });\n}\n\n/***/ }\n],[17]);\n\n\n// WEBPACK FOOTER //\n// bundle.app.e7dd29070eaa6d1e9d47.js","export {qs, qsa, $on, $delegate, $parent, log, remove}\n\n// Get element(s) by CSS selector:\nfunction qs(selector, scope) {\n  return (scope || document).querySelector(selector)\n}\nfunction qsa(selector, scope) {\n  return (scope || document).querySelectorAll(selector)\n}\n\nfunction log(...args) {\n  if (window.console && window.console.log) {\n    window.console.log(...args)\n  }\n}\n\n// addEventListener wrapper:\nfunction $on(target, type, callback, useCapture) {\n  target.addEventListener(type, callback, !!useCapture)\n}\n\n// Attach a handler to event for all elements that match the selector,\n// now or in the future, based on a root element\nfunction $delegate(target, selector, type, handler) {\n  // https://developer.mozilla.org/en-US/docs/Web/Events/blur\n  var useCapture = type === 'blur' || type === 'focus'\n  $on(target, type, dispatchEvent, useCapture)\n\n  function dispatchEvent(event) {\n    var targetElement = event.target\n    var potentialElements = qsa(selector, target)\n    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0\n\n    if (hasMatch) {\n      handler.call(targetElement, event)\n    }\n  }\n}\n\n// Find the element's parent with the given tag name:\n// $parent(qs('a'), 'div');\nfunction $parent(element, tagName) {\n  if (!element.parentNode) {\n    return undefined\n  }\n  if (element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()) {\n    return element.parentNode\n  }\n  return $parent(element.parentNode, tagName)\n}\n\nfunction remove(array, thing) {\n  const index = array.indexOf(thing)\n  if (index === -1) {\n    return array\n  }\n  array.splice(index, 1)\n}\n\n// Allow for looping on nodes by chaining:\n// qsa('.foo').forEach(function () {})\nNodeList.prototype.forEach = Array.prototype.forEach\n\n\n\n// WEBPACK FOOTER //\n// ./helpers.js","import View from './view'\nimport Controller from './controller'\nimport Model from './model'\nimport Store from './store'\nimport Template from './template'\nimport {remove} from './helpers'\n\nexport {updateTodo, getTodo, subscribe}\n\nlet todo\nconst subscribers = []\n\n/**\n * Sets up a brand new Todo list.\n *\n * @param {string} name The name of your new to do list.\n */\nfunction Todo(name) {\n  this.storage = new Store(name)\n  this.model = new Model(this.storage)\n  this.template = new Template()\n  this.view = new View(this.template)\n  this.controller = new Controller(this.model, this.view)\n}\n\nfunction updateTodo() {\n  todo = new Todo('todos-vanillajs')\n  todo.controller.setView(document.location.hash)\n  subscribers.forEach(s => s())\n}\n\nfunction getTodo() {\n  return todo\n}\n\nfunction subscribe(cb) {\n  subscribers.push(cb)\n  return function unsubscribe() {\n    remove(subscribers, cb)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./todo.js","import {subscribe, getTodo} from '../todo'\n\nlet graphArea\nconst unsubscribe = {\n  store: null,\n  todo: null,\n}\n\nexport default toggleGraph\n\nfunction toggleGraph() {\n  if (graphArea) {\n    graphArea.remove()\n    graphArea = null\n    unsubscribe.store()\n    unsubscribe.todo()\n    return false\n  } else {\n    graphArea = document.createElement('div')\n    document.body.querySelector('.graph-area-container').appendChild(graphArea)\n    const {storage} = getTodo()\n    loadAndRenderGraph(graphArea, storage)\n    updateTodoSubscription()\n    updateStoreSubscription(storage)\n    return true\n  }\n}\n\nfunction updateTodoSubscription() {\n  if (unsubscribe.todo) {\n    unsubscribe.todo()\n  }\n  unsubscribe.todo = subscribe(function onTodoUpdate() {\n    const {storage} = getTodo()\n    updateStoreSubscription(storage)\n    loadAndRenderGraph(graphArea, storage)\n  })\n}\n\nfunction updateStoreSubscription(store) {\n  if (unsubscribe.store) {\n    unsubscribe.store()\n  }\n  unsubscribe.store = store.subscribe(function onStoreUpdate() {\n    loadAndRenderGraph(graphArea, store)\n  })\n}\n\nfunction loadAndRenderGraph(node, store) {\n  System.import('./render').then(({default: renderGraph}) => {\n    renderGraph(node, store)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./graph/index.js","var appCacheIframe;\n\nfunction hasSW() {\n  return 'serviceWorker' in navigator &&\n    // This is how I block Chrome 40 and detect Chrome 41, because first has\n    // bugs with history.pustState and/or hashchange\n    (window.fetch || 'imageRendering' in document.documentElement.style) &&\n    (window.location.protocol === 'https:' || window.location.hostname === 'localhost')\n}\n\nfunction install(options) {\n  options || (options = {});\n\n  \n    if (hasSW()) {\n      var registration = navigator.serviceWorker\n        .register(\n          \"sw.js\"\n          \n        );\n\n      \n\n      return;\n    }\n  \n\n  \n    if (window.applicationCache) {\n      var directory = \"appcache/\";\n      var name = \"manifest\";\n\n      var doLoad = function() {\n        var page = directory + name + '.html';\n        var iframe = document.createElement('iframe');\n\n        \n\n        iframe.src = page;\n        iframe.style.display = 'none';\n\n        appCacheIframe = iframe;\n        document.body.appendChild(iframe);\n      };\n\n      if (document.readyState === 'complete') {\n        setTimeout(doLoad);\n      } else {\n        window.addEventListener('load', doLoad);\n      }\n\n      return;\n    }\n  \n}\n\nfunction applyUpdate(callback, errback) {\n  \n\n  \n}\n\nexports.install = install;\nexports.applyUpdate = applyUpdate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/offline-plugin/runtime.js\n// module id = 7\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.css\n// module id = 8\n// module chunks = 1","export default Controller\n\n/**\n* Takes a model and view and acts as the controller between them\n*\n* @constructor\n* @param {object} model The model instance\n* @param {object} view The view instance\n*/\nfunction Controller(model, view) {\n  var that = this\n  that.model = model\n  that.view = view\n\n  that.view.bind('newTodo', function(title) {\n    that.addItem(title)\n  })\n\n  that.view.bind('itemEdit', function(item) {\n    that.editItem(item.id)\n  })\n\n  that.view.bind('itemEditDone', function(item) {\n    that.editItemSave(item.id, item.title)\n  })\n\n  that.view.bind('itemEditCancel', function(item) {\n    that.editItemCancel(item.id)\n  })\n\n  that.view.bind('itemRemove', function(item) {\n    that.removeItem(item.id)\n  })\n\n  that.view.bind('itemToggle', function(item) {\n    that.toggleComplete(item.id, item.completed)\n  })\n\n  that.view.bind('removeCompleted', function() {\n    that.removeCompletedItems()\n  })\n\n  that.view.bind('toggleAll', function(status) {\n    that.toggleAll(status.completed)\n  })\n}\n\n/**\n* Loads and initialises the view\n*\n* @param {string} '' | 'active' | 'completed'\n*/\nController.prototype.setView = function(locationHash) {\n  var route = locationHash.split('/')[1]\n  var page = route || ''\n  this._updateFilterState(page)\n}\n\n/**\n* An event to fire on load. Will get all items and display them in the\n* todo-list\n*/\nController.prototype.showAll = function() {\n  var that = this\n  that.model.read(function(data) {\n    that.view.render('showEntries', data)\n  })\n}\n\n/**\n* Renders all active tasks\n*/\nController.prototype.showActive = function() {\n  var that = this\n  that.model.read({completed: false}, function(data) {\n    that.view.render('showEntries', data)\n  })\n}\n\n/**\n* Renders all completed tasks\n*/\nController.prototype.showCompleted = function() {\n  var that = this\n  that.model.read({completed: true}, function(data) {\n    that.view.render('showEntries', data)\n  })\n}\n\n/**\n* An event to fire whenever you want to add an item. Simply pass in the event\n* object and it'll handle the DOM insertion and saving of the new item.\n*/\nController.prototype.addItem = function(title) {\n  var that = this\n\n  if (title.trim() === '') {\n    return\n  }\n\n  that.model.create(title, function() {\n    that.view.render('clearNewTodo')\n    that._filter(true)\n  })\n}\n\n/*\n* Triggers the item editing mode.\n*/\nController.prototype.editItem = function(id) {\n  var that = this\n  that.model.read(id, function(data) {\n    that.view.render('editItem', {id, title: data[0].title})\n  })\n}\n\n/*\n* Finishes the item editing mode successfully.\n*/\nController.prototype.editItemSave = function(id, title) {\n  var that = this\n  if (title.trim()) {\n    that.model.update(id, {title}, function() {\n      that.view.render('editItemDone', {id, title})\n    })\n  } else {\n    that.removeItem(id)\n  }\n}\n\n/*\n* Cancels the item editing mode.\n*/\nController.prototype.editItemCancel = function(id) {\n  var that = this\n  that.model.read(id, function(data) {\n    that.view.render('editItemDone', {id, title: data[0].title})\n  })\n}\n\n/**\n* By giving it an ID it'll find the DOM element matching that ID,\n* remove it from the DOM and also remove it from storage.\n*\n* @param {number} id The ID of the item to remove from the DOM and\n* storage\n*/\nController.prototype.removeItem = function(id) {\n  var that = this\n  that.model.remove(id, function() {\n    that.view.render('removeItem', id)\n  })\n\n  that._filter()\n}\n\n/**\n* Will remove all completed items from the DOM and storage.\n*/\nController.prototype.removeCompletedItems = function() {\n  var that = this\n  that.model.read({completed: true}, function(data) {\n    data.forEach(function(item) {\n      that.removeItem(item.id)\n    })\n  })\n\n  that._filter()\n}\n\n/**\n* Give it an ID of a model and a checkbox and it will update the item\n* in storage based on the checkbox's state.\n*\n* @param {number} id The ID of the element to complete or uncomplete\n* @param {object} checkbox The checkbox to check the state of complete\n*                          or not\n* @param {boolean|undefined} silent Prevent re-filtering the todo items\n*/\nController.prototype.toggleComplete = function(id, completed, silent) {\n  var that = this\n  that.model.update(id, {completed}, function() {\n    that.view.render('elementComplete', {\n      id,\n      completed,\n    })\n  })\n\n  if (!silent) {\n    that._filter()\n  }\n}\n\n/**\n* Will toggle ALL checkboxes' on/off state and completeness of models.\n* Just pass in the event object.\n*/\nController.prototype.toggleAll = function(completed) {\n  var that = this\n  that.model.read({completed: !completed}, function(data) {\n    data.forEach(function(item) {\n      that.toggleComplete(item.id, completed, true)\n    })\n  })\n\n  that._filter()\n}\n\n/**\n* Updates the pieces of the page which change depending on the remaining\n* number of todos.\n*/\nController.prototype._updateCount = function() {\n  var that = this\n  that.model.getCount(function(todos) {\n    that.view.render('updateElementCount', todos.active)\n    that.view.render('clearCompletedButton', {\n      completed: todos.completed,\n      visible: todos.completed > 0\n    })\n\n    that.view.render('toggleAll', {checked: todos.completed === todos.total})\n    that.view.render('contentBlockVisibility', {visible: todos.total > 0})\n  })\n}\n\n/**\n* Re-filters the todo items, based on the active route.\n* @param {boolean|undefined} force  forces a re-painting of todo items.\n*/\nController.prototype._filter = function(force) {\n  var activeRoute = this._activeRoute.charAt(0).toUpperCase() + this._activeRoute.substr(1)\n\n  // Update the elements on the page, which change with each completed todo\n  this._updateCount()\n\n  // If the last active route isn't \"All\", or we're switching routes, we\n  // re-create the todo item elements, calling:\n  //   this.show[All|Active|Completed]();\n  if (force || this._lastActiveRoute !== 'All' || this._lastActiveRoute !== activeRoute) {\n    this['show' + activeRoute]()\n  }\n\n  this._lastActiveRoute = activeRoute\n}\n\n/**\n* Simply updates the filter nav's selected states\n*/\nController.prototype._updateFilterState = function(currentPage) {\n  // Store a reference to the active route, allowing us to re-filter todo\n  // items as they are marked complete or incomplete.\n  currentPage = currentPage.split('?')[0]\n  this._activeRoute = currentPage\n\n  if (currentPage === '') {\n    this._activeRoute = 'All'\n  }\n\n  this._filter()\n\n  this.view.render('setFilter', currentPage)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./controller.js","export default Model\n\n/**\n* Creates a new Model instance and hooks up the storage.\n*\n* @constructor\n* @param {object} storage A reference to the client side storage class\n*/\nfunction Model(storage) {\n  this.storage = storage\n}\n\n/**\n* Creates a new todo model\n*\n* @param {string} [title] The title of the task\n* @param {function} [callback] The callback to fire after the model is created\n*/\nModel.prototype.create = function(title, callback) {\n  title = title || ''\n  callback = callback || function() {\n  }\n\n  var newItem = {\n    title: title.trim(),\n    completed: false\n  }\n\n  this.storage.save(newItem, callback)\n}\n\n/**\n * Finds and returns a model in storage. If no query is given it'll simply\n * return everything. If you pass in a string or number it'll look that up as\n * the ID of the model to find. Lastly, you can pass it an object to match against.\n *\n * @param {string|number|object} [query] A query to match models against\n * @param {function} [callback] The callback to fire after the model is found\n *\n * @example\n * model.read(1, func); // Will find the model with an ID of 1\n * model.read('1'); // Same as above\n * //Below will find a model with foo equalling bar and hello equalling world.\n * model.read({ foo: 'bar', hello: 'world' });\n */\nModel.prototype.read = function(query, callback) {\n  var queryType = typeof query\n  callback = callback || function() {\n  }\n\n  if (queryType === 'function') {\n    callback = query\n    return this.storage.findAll(callback)\n  } else if (queryType === 'string' || queryType === 'number') {\n    query = parseInt(query, 10)\n    this.storage.find({id: query}, callback)\n  } else {\n    this.storage.find(query, callback)\n  }\n  return undefined\n}\n\n/**\n* Updates a model by giving it an ID, data to update, and a callback to fire when\n* the update is complete.\n*\n* @param {number} id The id of the model to update\n* @param {object} data The properties to update and their new value\n* @param {function} callback The callback to fire when the update is complete.\n*/\nModel.prototype.update = function(id, data, callback) {\n  this.storage.save(data, callback, id)\n}\n\n/**\n* Removes a model from storage\n*\n* @param {number} id The ID of the model to remove\n* @param {function} callback The callback to fire when the removal is complete.\n*/\nModel.prototype.remove = function(id, callback) {\n  this.storage.remove(id, callback)\n}\n\n/**\n* WARNING: Will remove ALL data from storage.\n*\n* @param {function} callback The callback to fire when the storage is wiped.\n*/\nModel.prototype.removeAll = function(callback) {\n  this.storage.drop(callback)\n}\n\n/**\n* Returns a count of all todos\n*/\nModel.prototype.getCount = function(callback) {\n  var todos = {\n    active: 0,\n    completed: 0,\n    total: 0\n  }\n\n  this.storage.findAll(function(data) {\n    data.forEach(function(todo) {\n      if (todo.completed) {\n        todos.completed++\n      } else {\n        todos.active++\n      }\n\n      todos.total++\n    })\n    callback(todos)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model.js","import {remove} from './helpers'\nexport default Store\n\n/**\n * Creates a new client side storage object and will create an empty\n * collection if no collection already exists.\n *\n * @param {string} name The name of our DB we want to use\n * @param {function} callback Our fake DB uses callbacks because in\n * real life you probably would be making AJAX calls\n */\nfunction Store(name, callback) {\n  callback = callback || function() {\n  }\n\n  this._dbName = name\n\n  if (!localStorage[name]) {\n    var data = {\n      todos: []\n    }\n\n    localStorage[name] = JSON.stringify(data)\n  }\n\n  callback.call(this, JSON.parse(localStorage[name]))\n  this.subscribers = []\n}\n\nStore.prototype.subscribe = function(subscriber) {\n  this.subscribers.push(subscriber)\n  return () => remove(this.subscribers, subscriber)\n}\n\nStore.prototype._notify = function() {\n  this.subscribers.forEach(s => s())\n}\n\n/**\n* Finds items based on a query given as a JS object\n*\n* @param {object} query The query to match against (i.e. {foo: 'bar'})\n* @param {function} callback   The callback to fire when the query has\n* completed running\n*\n* @example\n* db.find({foo: 'bar', hello: 'world'}, function (data) {\n*   // data will return any items that have foo: bar and\n*   // hello: world in their properties\n* });\n*/\nStore.prototype.find = function(query, callback) {\n  if (!callback) {\n    return\n  }\n\n  var todos = JSON.parse(localStorage[this._dbName]).todos\n\n  callback.call(this, todos.filter(function(todo) {\n    for (var q in query) {\n      if (query[q] !== todo[q]) {\n        return false\n      }\n    }\n    return true\n  }))\n}\n\n/**\n* Will retrieve all data from the collection\n*\n* @param {function} callback The callback to fire upon retrieving data\n*/\nStore.prototype.findAll = function(callback) {\n  callback = callback || function() {\n  }\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n}\n\n/**\n* Will save the given data to the DB. If no item exists it will create a new\n* item, otherwise it'll simply update an existing item's properties\n*\n* @param {object} updateData The data to save back into the DB\n* @param {function} callback The callback to fire after saving\n* @param {number} id An optional param to enter an ID of an item to update\n*/\nStore.prototype.save = function(updateData, callback, id) {\n  var data = JSON.parse(localStorage[this._dbName])\n  var todos = data.todos\n\n  callback = callback || function() {\n  }\n\n  // If an ID was actually given, find the item and update each property\n  if (id) {\n    for (var i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n        for (var key in updateData) { // eslint-disable-line guard-for-in\n          todos[i][key] = updateData[key]\n        }\n        break\n      }\n    }\n\n    localStorage[this._dbName] = JSON.stringify(data)\n    callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n  } else {\n    // Generate an ID\n    updateData.id = new Date().getTime()\n\n    todos.push(updateData)\n    localStorage[this._dbName] = JSON.stringify(data)\n    callback.call(this, [updateData])\n  }\n  this._notify()\n}\n\n/**\n* Will remove an item from the Store based on its ID\n*\n* @param {number} id The ID of the item you want to remove\n* @param {function} callback The callback to fire after saving\n*/\nStore.prototype.remove = function(id, callback) {\n  var data = JSON.parse(localStorage[this._dbName])\n  var todos = data.todos\n\n  for (var i = 0; i < todos.length; i++) {\n    if (todos[i].id === id) {\n      todos.splice(i, 1)\n      break\n    }\n  }\n\n  localStorage[this._dbName] = JSON.stringify(data)\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n  this._notify()\n}\n\n/**\n* Will drop all storage and start fresh\n*\n* @param {function} callback The callback to fire after dropping the data\n*/\nStore.prototype.drop = function(callback) {\n  localStorage[this._dbName] = JSON.stringify({todos: []})\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n  this._notify()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./store.js","export default Template\n\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;',\n  '`': '&#x60;'\n}\n\nvar escapeHtmlChar = function(chr) {\n  return htmlEscapes[chr]\n}\n\nvar reUnescapedHtml = /[&<>\"'`]/g\nvar reHasUnescapedHtml = new RegExp(reUnescapedHtml.source)\n\nvar escape = function(string) {\n  if (string && reHasUnescapedHtml.test(string)) {\n    return string.replace(reUnescapedHtml, escapeHtmlChar)\n  } else {\n    return string\n  }\n}\n\n/**\n* Sets up defaults for all the Template methods such as a default template\n*\n* @constructor\n*/\nfunction Template() {\n  this.defaultTemplate = `\n    <li data-id=\"{{id}}\" class=\"{{completed}}\">\n      <div class=\"view\">\n        <input class=\"toggle\" type=\"checkbox\" {{checked}} />\n        <label>{{title}}</label>\n        <button class=\"destroy\"></button>\n      </div>\n    </li>\n  `\n}\n\n/**\n * Creates an <li> HTML string and returns it for placement in your app.\n *\n * NOTE: In real life you should be using a templating engine such as Mustache\n * or Handlebars, however, this is a vanilla JS example.\n *\n * @param {object} data The object containing keys you want to find in the\n *                      template to replace.\n * @returns {string} HTML String of an <li> element\n *\n * @example\n * view.show({\n *  id: 1,\n *  title: \"Hello World\",\n *  completed: 0,\n * });\n */\nTemplate.prototype.show = function(data) {\n  var i, l\n  var view = ''\n\n  for (i = 0, l = data.length; i < l; i++) {\n    var template = this.defaultTemplate\n    var completed = ''\n    var checked = ''\n\n    if (data[i].completed) {\n      completed = 'completed'\n      checked = 'checked'\n    }\n\n    template = template.replace('{{id}}', data[i].id)\n    template = template.replace('{{title}}', escape(data[i].title))\n    template = template.replace('{{completed}}', completed)\n    template = template.replace('{{checked}}', checked)\n\n    view = view + template\n  }\n\n  return view\n}\n\n/**\n * Displays a counter of how many to dos are left to complete\n *\n * @param {number} activeTodos The number of active todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.itemCounter = function(activeTodos) {\n  var plural = activeTodos === 1 ? '' : 's'\n\n  return '<strong>' + activeTodos + '</strong> item' + plural + ' left'\n}\n\n/**\n * Updates the text within the \"Clear completed\" button\n *\n * @param  {[type]} completedTodos The number of completed todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.clearCompletedButton = function(completedTodos) {\n  if (completedTodos > 0) {\n    return 'Clear completed'\n  } else {\n    return ''\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./template.js","/* eslint no-invalid-this: 0, complexity:[2, 9] */\nimport {qs, qsa, $on, $parent, $delegate} from './helpers'\n\n/**\n * View that abstracts away the browser's DOM completely.\n * It has two simple entry points:\n *\n *   - bind(eventName, handler)\n *     Takes a todo application event and registers the handler\n *   - render(command, parameterObject)\n *     Renders the given command with the options\n */\nexport default class View {\n  constructor(template) {\n    this.template = template\n\n    this.ENTER_KEY = 13\n    this.ESCAPE_KEY = 27\n\n    this.$todoList = qs('.todo-list')\n    this.$todoItemCounter = qs('.todo-count')\n    this.$clearCompleted = qs('.clear-completed')\n    this.$main = qs('.main')\n    this.$footer = qs('.footer')\n    this.$toggleAll = qs('.toggle-all')\n    this.$newTodo = qs('.new-todo')\n  }\n\n  _removeItem(id) {\n    var elem = qs('[data-id=\"' + id + '\"]')\n\n    if (elem) {\n      this.$todoList.removeChild(elem)\n    }\n  }\n\n  _clearCompletedButton(completedCount, visible) {\n    this.$clearCompleted.innerHTML = this.template.clearCompletedButton(completedCount)\n    this.$clearCompleted.style.display = visible ? 'block' : 'none'\n  }\n\n  _editItemDone(id, title) {\n    var listItem = qs('[data-id=\"' + id + '\"]')\n\n    if (!listItem) {\n      return\n    }\n\n    var input = qs('input.edit', listItem)\n    listItem.removeChild(input)\n\n    listItem.className = listItem.className.replace('editing', '')\n\n    qsa('label', listItem).forEach(function(label) {\n      label.textContent = title\n    })\n  }\n\n  render(viewCmd, parameter) {\n    var that = this\n    var viewCommands = {\n      showEntries: function() {\n        that.$todoList.innerHTML = that.template.show(parameter)\n      },\n      removeItem: function() {\n        that._removeItem(parameter)\n      },\n      updateElementCount: function() {\n        that.$todoItemCounter.innerHTML = that.template.itemCounter(parameter)\n      },\n      clearCompletedButton: function() {\n        that._clearCompletedButton(parameter.completed, parameter.visible)\n      },\n      contentBlockVisibility: function() {\n        that.$main.style.display = that.$footer.style.display = parameter.visible ? 'block' : 'none'\n      },\n      toggleAll: function() {\n        that.$toggleAll.checked = parameter.checked\n      },\n      setFilter: function() {\n        _setFilter(parameter)\n      },\n      clearNewTodo: function() {\n        that.$newTodo.value = ''\n      },\n      elementComplete: function() {\n        _elementComplete(parameter.id, parameter.completed)\n      },\n      editItem: function() {\n        _editItem(parameter.id, parameter.title)\n      },\n      editItemDone: function() {\n        that._editItemDone(parameter.id, parameter.title)\n      }\n    }\n\n    viewCommands[viewCmd]()\n  }\n\n  _bindItemEditDone(handler) {\n    var that = this\n    $delegate(that.$todoList, 'li .edit', 'blur', function() {\n      if (!this.dataset.iscanceled) {\n        handler({\n          id: _itemId(this),\n          title: this.value\n        })\n      }\n    })\n\n    $delegate(that.$todoList, 'li .edit', 'keypress', function(event) {\n      if (event.keyCode === that.ENTER_KEY) {\n        // Remove the cursor from the input when you hit enter just like if it\n        // were a real form\n        this.blur()\n      }\n    })\n  }\n\n  _bindItemEditCancel(handler) {\n    var that = this\n    $delegate(that.$todoList, 'li .edit', 'keyup', function(event) {\n      if (event.keyCode === that.ESCAPE_KEY) {\n        this.dataset.iscanceled = true\n        this.blur()\n\n        handler({id: _itemId(this)})\n      }\n    })\n  }\n\n  bind(event, handler) {\n    var that = this\n    if (event === 'newTodo') {\n      $on(that.$newTodo, 'change', function() {\n        handler(that.$newTodo.value)\n      })\n\n    } else if (event === 'removeCompleted') {\n      $on(that.$clearCompleted, 'click', function() {\n        handler()\n      })\n\n    } else if (event === 'toggleAll') {\n      $on(that.$toggleAll, 'click', function() {\n        handler({completed: this.checked})\n      })\n\n    } else if (event === 'itemEdit') {\n      $delegate(that.$todoList, 'li label', 'dblclick', function() {\n        handler({id: _itemId(this)})\n      })\n\n    } else if (event === 'itemRemove') {\n      $delegate(that.$todoList, '.destroy', 'click', function() {\n        handler({id: _itemId(this)})\n      })\n\n    } else if (event === 'itemToggle') {\n      $delegate(that.$todoList, '.toggle', 'click', function() {\n        handler({\n          id: _itemId(this),\n          completed: this.checked\n        })\n      })\n\n    } else if (event === 'itemEditDone') {\n      that._bindItemEditDone(handler)\n\n    } else if (event === 'itemEditCancel') {\n      that._bindItemEditCancel(handler)\n    }\n  }\n}\n\nfunction _setFilter(currentPage) {\n  qs('.filters .selected').className = ''\n  qs('.filters [href=\"#/' + currentPage + '\"]').className = 'selected'\n}\n\nfunction _elementComplete(id, completed) {\n  var listItem = qs('[data-id=\"' + id + '\"]')\n\n  if (!listItem) {\n    return\n  }\n\n  listItem.className = completed ? 'completed' : ''\n\n  // In case it was toggled from an event and not by clicking the checkbox\n  qs('input', listItem).checked = completed\n}\n\nfunction _editItem(id, title) {\n  var listItem = qs('[data-id=\"' + id + '\"]')\n\n  if (!listItem) {\n    return\n  }\n\n  listItem.className = listItem.className + ' editing'\n\n  var input = document.createElement('input')\n  input.className = 'edit'\n\n  listItem.appendChild(input)\n  input.focus()\n  input.value = title\n}\n\nfunction _itemId(element) {\n  var li = $parent(element, 'li')\n  return parseInt(li.dataset.id, 10)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./view.js","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".toggle-graph{float:left;margin-left:16px;cursor:pointer;position:relative;z-index:1}.toggle-graph svg{height:20px;width:20px}.toggle-graph svg path{fill:#777}.toggle-graph.active svg path,.toggle-graph:focus svg path,.toggle-graph:hover svg path{fill:#000}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/css-loader!./app.css\n// module id = 16\n// module chunks = 1","import 'todomvc-common/base.css'\nimport 'todomvc-app-css/index.css'\nimport './app.css'\nimport {install as offlineInstall} from 'offline-plugin/runtime'\n\nimport {$on} from './helpers'\nimport {updateTodo} from './todo'\nimport toggleGraph from './graph'\n\nif (process.env.NODE_ENV === 'production') {\n  offlineInstall()\n}\n\n$on(window, 'load', onLoad)\n$on(window, 'hashchange', updateTodo)\n\nfunction onLoad() {\n  updateTodo()\n  const toggleGraphButton = document.querySelector('.toggle-graph')\n  $on(\n    toggleGraphButton,\n    'click',\n    () => {\n      const active = toggleGraph()\n      if (active) {\n        toggleGraphButton.classList.add('active')\n      } else {\n        toggleGraphButton.classList.remove('active')\n      }\n    },\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app.js"],"sourceRoot":""}